# === Build Stage ===
FROM python:3.13-slim as builder

# Install build dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        curl \
        nodejs \
        npm \
        && rm -rf /var/lib/apt/lists/*

WORKDIR /workspace

# Install Prettier
RUN npm install -g prettier

# Create Python wheels for linting and formatting
RUN pip wheel --no-cache-dir --wheel-dir /wheels \
    flake8 \
    black \
    ansible-lint

# === Final Stage ===
FROM python:3.13-slim

ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install only runtime dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        curl \
        nodejs \
        && rm -rf /var/lib/apt/lists/*

WORKDIR /workspace

# Copy Prettier and Python packages
COPY --from=builder /usr/local/lib/node_modules /usr/local/lib/node_modules
COPY --from=builder /usr/local/bin/prettier /usr/local/bin/prettier
COPY --from=builder /wheels /wheels
RUN pip install --no-cache /wheels/* && rm -rf /wheels

# Copy application code
COPY src/ ./src/
COPY ansible/ ./ansible/
COPY compose.yml ./
COPY Dockerfile ./
COPY requirements.txt ./

CMD ["bash", "-c", "flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics && flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics && black --check src/ && prettier --check compose.yml"]
